// Code generated from ClickHouseParser.g4 by ANTLR 4.13.0. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type ClickHouseParserLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var ClickHouseParserLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func clickhouseparserlexerLexerInit() {
	staticData := &ClickHouseParserLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "'='", "'('", "')'", "','", "'.'", "'+'",
	}
	staticData.SymbolicNames = []string{
		"", "CREATE", "ALTER", "DATABASE", "TABLE", "IF", "NOT", "EXISTS", "ON",
		"CLUSTER", "ENGINE", "COMMENT", "ORDER", "PARTITION", "PRIMARY", "SAMPLE",
		"TTL", "SETTINGS", "KEY", "BY", "DEFAULT", "CODEC", "INDEX", "TYPE",
		"GRANULARITY", "INTERVAL", "SECOND", "MINUTE", "HOUR", "DAY", "WEEK",
		"MONTH", "QUARTER", "YEAR", "ADD", "COLUMN", "ID", "EQUAL", "LEFT_P",
		"RIGHT_P", "COMMA", "DOT", "PLUS", "NUMBER", "STRING", "B", "C", "D",
		"E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R",
		"S", "T", "U", "V", "W", "X", "Y", "Z", "WS",
	}
	staticData.RuleNames = []string{
		"CREATE", "ALTER", "DATABASE", "TABLE", "IF", "NOT", "EXISTS", "ON",
		"CLUSTER", "ENGINE", "COMMENT", "ORDER", "PARTITION", "PRIMARY", "SAMPLE",
		"TTL", "SETTINGS", "KEY", "BY", "DEFAULT", "CODEC", "INDEX", "TYPE",
		"GRANULARITY", "INTERVAL", "SECOND", "MINUTE", "HOUR", "DAY", "WEEK",
		"MONTH", "QUARTER", "YEAR", "ADD", "COLUMN", "ID", "EQUAL", "LEFT_P",
		"RIGHT_P", "COMMA", "DOT", "PLUS", "NUMBER", "STRING", "A", "B", "C",
		"D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q",
		"R", "S", "T", "U", "V", "W", "X", "Y", "Z", "WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 70, 455, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
		1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
		1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4,
		1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6,
		1, 6, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8,
		1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1,
		10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12,
		1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1,
		13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14,
		1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1,
		16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18,
		1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1,
		20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21,
		1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1,
		23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24,
		1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1,
		25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27,
		1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1,
		29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31,
		1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 32, 1,
		32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34,
		1, 34, 1, 35, 1, 35, 5, 35, 369, 8, 35, 10, 35, 12, 35, 372, 9, 35, 1,
		36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1, 41,
		1, 41, 1, 42, 4, 42, 387, 8, 42, 11, 42, 12, 42, 388, 1, 43, 1, 43, 5,
		43, 393, 8, 43, 10, 43, 12, 43, 396, 9, 43, 1, 43, 1, 43, 1, 44, 1, 44,
		1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1,
		50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1, 53, 1, 54, 1, 54, 1, 55,
		1, 55, 1, 56, 1, 56, 1, 57, 1, 57, 1, 58, 1, 58, 1, 59, 1, 59, 1, 60, 1,
		60, 1, 61, 1, 61, 1, 62, 1, 62, 1, 63, 1, 63, 1, 64, 1, 64, 1, 65, 1, 65,
		1, 66, 1, 66, 1, 67, 1, 67, 1, 68, 1, 68, 1, 69, 1, 69, 1, 70, 1, 70, 1,
		70, 1, 70, 1, 394, 0, 71, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15,
		8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17,
		35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26,
		53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35,
		71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44,
		89, 0, 91, 45, 93, 46, 95, 47, 97, 48, 99, 49, 101, 50, 103, 51, 105, 52,
		107, 53, 109, 54, 111, 55, 113, 56, 115, 57, 117, 58, 119, 59, 121, 60,
		123, 61, 125, 62, 127, 63, 129, 64, 131, 65, 133, 66, 135, 67, 137, 68,
		139, 69, 141, 70, 1, 0, 31, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57,
		65, 90, 95, 95, 97, 122, 1, 0, 48, 57, 1, 0, 39, 39, 2, 0, 65, 65, 97,
		97, 2, 0, 66, 66, 98, 98, 2, 0, 67, 67, 99, 99, 2, 0, 68, 68, 100, 100,
		2, 0, 69, 69, 101, 101, 2, 0, 70, 70, 102, 102, 2, 0, 71, 71, 103, 103,
		2, 0, 72, 72, 104, 104, 2, 0, 73, 73, 105, 105, 2, 0, 74, 74, 106, 106,
		2, 0, 75, 75, 107, 107, 2, 0, 76, 76, 108, 108, 2, 0, 77, 77, 109, 109,
		2, 0, 78, 78, 110, 110, 2, 0, 79, 79, 111, 111, 2, 0, 80, 80, 112, 112,
		2, 0, 81, 81, 113, 113, 2, 0, 82, 82, 114, 114, 2, 0, 83, 83, 115, 115,
		2, 0, 84, 84, 116, 116, 2, 0, 85, 85, 117, 117, 2, 0, 86, 86, 118, 118,
		2, 0, 87, 87, 119, 119, 2, 0, 88, 88, 120, 120, 2, 0, 89, 89, 121, 121,
		2, 0, 90, 90, 122, 122, 3, 0, 9, 10, 13, 13, 32, 32, 456, 0, 1, 1, 0, 0,
		0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0,
		0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0,
		0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1,
		0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33,
		1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0,
		41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0,
		0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0,
		0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0,
		0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1,
		0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79,
		1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0,
		87, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0,
		0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0,
		0, 0, 0, 105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111,
		1, 0, 0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1, 0, 0, 0,
		0, 119, 1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1,
		0, 0, 0, 0, 127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0, 0, 131, 1, 0, 0, 0, 0,
		133, 1, 0, 0, 0, 0, 135, 1, 0, 0, 0, 0, 137, 1, 0, 0, 0, 0, 139, 1, 0,
		0, 0, 0, 141, 1, 0, 0, 0, 1, 143, 1, 0, 0, 0, 3, 150, 1, 0, 0, 0, 5, 156,
		1, 0, 0, 0, 7, 165, 1, 0, 0, 0, 9, 171, 1, 0, 0, 0, 11, 174, 1, 0, 0, 0,
		13, 178, 1, 0, 0, 0, 15, 185, 1, 0, 0, 0, 17, 188, 1, 0, 0, 0, 19, 196,
		1, 0, 0, 0, 21, 203, 1, 0, 0, 0, 23, 211, 1, 0, 0, 0, 25, 217, 1, 0, 0,
		0, 27, 227, 1, 0, 0, 0, 29, 235, 1, 0, 0, 0, 31, 242, 1, 0, 0, 0, 33, 246,
		1, 0, 0, 0, 35, 255, 1, 0, 0, 0, 37, 259, 1, 0, 0, 0, 39, 262, 1, 0, 0,
		0, 41, 270, 1, 0, 0, 0, 43, 276, 1, 0, 0, 0, 45, 282, 1, 0, 0, 0, 47, 287,
		1, 0, 0, 0, 49, 299, 1, 0, 0, 0, 51, 308, 1, 0, 0, 0, 53, 315, 1, 0, 0,
		0, 55, 322, 1, 0, 0, 0, 57, 327, 1, 0, 0, 0, 59, 331, 1, 0, 0, 0, 61, 336,
		1, 0, 0, 0, 63, 342, 1, 0, 0, 0, 65, 350, 1, 0, 0, 0, 67, 355, 1, 0, 0,
		0, 69, 359, 1, 0, 0, 0, 71, 366, 1, 0, 0, 0, 73, 373, 1, 0, 0, 0, 75, 375,
		1, 0, 0, 0, 77, 377, 1, 0, 0, 0, 79, 379, 1, 0, 0, 0, 81, 381, 1, 0, 0,
		0, 83, 383, 1, 0, 0, 0, 85, 386, 1, 0, 0, 0, 87, 390, 1, 0, 0, 0, 89, 399,
		1, 0, 0, 0, 91, 401, 1, 0, 0, 0, 93, 403, 1, 0, 0, 0, 95, 405, 1, 0, 0,
		0, 97, 407, 1, 0, 0, 0, 99, 409, 1, 0, 0, 0, 101, 411, 1, 0, 0, 0, 103,
		413, 1, 0, 0, 0, 105, 415, 1, 0, 0, 0, 107, 417, 1, 0, 0, 0, 109, 419,
		1, 0, 0, 0, 111, 421, 1, 0, 0, 0, 113, 423, 1, 0, 0, 0, 115, 425, 1, 0,
		0, 0, 117, 427, 1, 0, 0, 0, 119, 429, 1, 0, 0, 0, 121, 431, 1, 0, 0, 0,
		123, 433, 1, 0, 0, 0, 125, 435, 1, 0, 0, 0, 127, 437, 1, 0, 0, 0, 129,
		439, 1, 0, 0, 0, 131, 441, 1, 0, 0, 0, 133, 443, 1, 0, 0, 0, 135, 445,
		1, 0, 0, 0, 137, 447, 1, 0, 0, 0, 139, 449, 1, 0, 0, 0, 141, 451, 1, 0,
		0, 0, 143, 144, 3, 93, 46, 0, 144, 145, 3, 123, 61, 0, 145, 146, 3, 97,
		48, 0, 146, 147, 3, 89, 44, 0, 147, 148, 3, 127, 63, 0, 148, 149, 3, 97,
		48, 0, 149, 2, 1, 0, 0, 0, 150, 151, 3, 89, 44, 0, 151, 152, 3, 111, 55,
		0, 152, 153, 3, 127, 63, 0, 153, 154, 3, 97, 48, 0, 154, 155, 3, 123, 61,
		0, 155, 4, 1, 0, 0, 0, 156, 157, 3, 95, 47, 0, 157, 158, 3, 89, 44, 0,
		158, 159, 3, 127, 63, 0, 159, 160, 3, 89, 44, 0, 160, 161, 3, 91, 45, 0,
		161, 162, 3, 89, 44, 0, 162, 163, 3, 125, 62, 0, 163, 164, 3, 97, 48, 0,
		164, 6, 1, 0, 0, 0, 165, 166, 3, 127, 63, 0, 166, 167, 3, 89, 44, 0, 167,
		168, 3, 91, 45, 0, 168, 169, 3, 111, 55, 0, 169, 170, 3, 97, 48, 0, 170,
		8, 1, 0, 0, 0, 171, 172, 3, 105, 52, 0, 172, 173, 3, 99, 49, 0, 173, 10,
		1, 0, 0, 0, 174, 175, 3, 115, 57, 0, 175, 176, 3, 117, 58, 0, 176, 177,
		3, 127, 63, 0, 177, 12, 1, 0, 0, 0, 178, 179, 3, 97, 48, 0, 179, 180, 3,
		135, 67, 0, 180, 181, 3, 105, 52, 0, 181, 182, 3, 125, 62, 0, 182, 183,
		3, 127, 63, 0, 183, 184, 3, 125, 62, 0, 184, 14, 1, 0, 0, 0, 185, 186,
		3, 117, 58, 0, 186, 187, 3, 115, 57, 0, 187, 16, 1, 0, 0, 0, 188, 189,
		3, 93, 46, 0, 189, 190, 3, 111, 55, 0, 190, 191, 3, 129, 64, 0, 191, 192,
		3, 125, 62, 0, 192, 193, 3, 127, 63, 0, 193, 194, 3, 97, 48, 0, 194, 195,
		3, 123, 61, 0, 195, 18, 1, 0, 0, 0, 196, 197, 3, 97, 48, 0, 197, 198, 3,
		115, 57, 0, 198, 199, 3, 101, 50, 0, 199, 200, 3, 105, 52, 0, 200, 201,
		3, 115, 57, 0, 201, 202, 3, 97, 48, 0, 202, 20, 1, 0, 0, 0, 203, 204, 3,
		93, 46, 0, 204, 205, 3, 117, 58, 0, 205, 206, 3, 113, 56, 0, 206, 207,
		3, 113, 56, 0, 207, 208, 3, 97, 48, 0, 208, 209, 3, 115, 57, 0, 209, 210,
		3, 127, 63, 0, 210, 22, 1, 0, 0, 0, 211, 212, 3, 117, 58, 0, 212, 213,
		3, 123, 61, 0, 213, 214, 3, 95, 47, 0, 214, 215, 3, 97, 48, 0, 215, 216,
		3, 123, 61, 0, 216, 24, 1, 0, 0, 0, 217, 218, 3, 119, 59, 0, 218, 219,
		3, 89, 44, 0, 219, 220, 3, 123, 61, 0, 220, 221, 3, 127, 63, 0, 221, 222,
		3, 105, 52, 0, 222, 223, 3, 127, 63, 0, 223, 224, 3, 105, 52, 0, 224, 225,
		3, 117, 58, 0, 225, 226, 3, 115, 57, 0, 226, 26, 1, 0, 0, 0, 227, 228,
		3, 119, 59, 0, 228, 229, 3, 123, 61, 0, 229, 230, 3, 105, 52, 0, 230, 231,
		3, 113, 56, 0, 231, 232, 3, 89, 44, 0, 232, 233, 3, 123, 61, 0, 233, 234,
		3, 137, 68, 0, 234, 28, 1, 0, 0, 0, 235, 236, 3, 125, 62, 0, 236, 237,
		3, 89, 44, 0, 237, 238, 3, 113, 56, 0, 238, 239, 3, 119, 59, 0, 239, 240,
		3, 111, 55, 0, 240, 241, 3, 97, 48, 0, 241, 30, 1, 0, 0, 0, 242, 243, 3,
		127, 63, 0, 243, 244, 3, 127, 63, 0, 244, 245, 3, 111, 55, 0, 245, 32,
		1, 0, 0, 0, 246, 247, 3, 125, 62, 0, 247, 248, 3, 97, 48, 0, 248, 249,
		3, 127, 63, 0, 249, 250, 3, 127, 63, 0, 250, 251, 3, 105, 52, 0, 251, 252,
		3, 115, 57, 0, 252, 253, 3, 101, 50, 0, 253, 254, 3, 125, 62, 0, 254, 34,
		1, 0, 0, 0, 255, 256, 3, 109, 54, 0, 256, 257, 3, 97, 48, 0, 257, 258,
		3, 137, 68, 0, 258, 36, 1, 0, 0, 0, 259, 260, 3, 91, 45, 0, 260, 261, 3,
		137, 68, 0, 261, 38, 1, 0, 0, 0, 262, 263, 3, 95, 47, 0, 263, 264, 3, 97,
		48, 0, 264, 265, 3, 99, 49, 0, 265, 266, 3, 89, 44, 0, 266, 267, 3, 129,
		64, 0, 267, 268, 3, 111, 55, 0, 268, 269, 3, 127, 63, 0, 269, 40, 1, 0,
		0, 0, 270, 271, 3, 93, 46, 0, 271, 272, 3, 117, 58, 0, 272, 273, 3, 95,
		47, 0, 273, 274, 3, 97, 48, 0, 274, 275, 3, 93, 46, 0, 275, 42, 1, 0, 0,
		0, 276, 277, 3, 105, 52, 0, 277, 278, 3, 115, 57, 0, 278, 279, 3, 95, 47,
		0, 279, 280, 3, 97, 48, 0, 280, 281, 3, 135, 67, 0, 281, 44, 1, 0, 0, 0,
		282, 283, 3, 127, 63, 0, 283, 284, 3, 137, 68, 0, 284, 285, 3, 119, 59,
		0, 285, 286, 3, 97, 48, 0, 286, 46, 1, 0, 0, 0, 287, 288, 3, 101, 50, 0,
		288, 289, 3, 123, 61, 0, 289, 290, 3, 89, 44, 0, 290, 291, 3, 115, 57,
		0, 291, 292, 3, 129, 64, 0, 292, 293, 3, 111, 55, 0, 293, 294, 3, 89, 44,
		0, 294, 295, 3, 123, 61, 0, 295, 296, 3, 105, 52, 0, 296, 297, 3, 127,
		63, 0, 297, 298, 3, 137, 68, 0, 298, 48, 1, 0, 0, 0, 299, 300, 3, 105,
		52, 0, 300, 301, 3, 115, 57, 0, 301, 302, 3, 127, 63, 0, 302, 303, 3, 97,
		48, 0, 303, 304, 3, 123, 61, 0, 304, 305, 3, 131, 65, 0, 305, 306, 3, 89,
		44, 0, 306, 307, 3, 111, 55, 0, 307, 50, 1, 0, 0, 0, 308, 309, 3, 125,
		62, 0, 309, 310, 3, 97, 48, 0, 310, 311, 3, 93, 46, 0, 311, 312, 3, 117,
		58, 0, 312, 313, 3, 115, 57, 0, 313, 314, 3, 95, 47, 0, 314, 52, 1, 0,
		0, 0, 315, 316, 3, 113, 56, 0, 316, 317, 3, 105, 52, 0, 317, 318, 3, 115,
		57, 0, 318, 319, 3, 129, 64, 0, 319, 320, 3, 127, 63, 0, 320, 321, 3, 97,
		48, 0, 321, 54, 1, 0, 0, 0, 322, 323, 3, 103, 51, 0, 323, 324, 3, 117,
		58, 0, 324, 325, 3, 129, 64, 0, 325, 326, 3, 123, 61, 0, 326, 56, 1, 0,
		0, 0, 327, 328, 3, 95, 47, 0, 328, 329, 3, 89, 44, 0, 329, 330, 3, 137,
		68, 0, 330, 58, 1, 0, 0, 0, 331, 332, 3, 133, 66, 0, 332, 333, 3, 97, 48,
		0, 333, 334, 3, 97, 48, 0, 334, 335, 3, 109, 54, 0, 335, 60, 1, 0, 0, 0,
		336, 337, 3, 113, 56, 0, 337, 338, 3, 117, 58, 0, 338, 339, 3, 115, 57,
		0, 339, 340, 3, 127, 63, 0, 340, 341, 3, 103, 51, 0, 341, 62, 1, 0, 0,
		0, 342, 343, 3, 121, 60, 0, 343, 344, 3, 129, 64, 0, 344, 345, 3, 89, 44,
		0, 345, 346, 3, 123, 61, 0, 346, 347, 3, 127, 63, 0, 347, 348, 3, 97, 48,
		0, 348, 349, 3, 123, 61, 0, 349, 64, 1, 0, 0, 0, 350, 351, 3, 137, 68,
		0, 351, 352, 3, 97, 48, 0, 352, 353, 3, 89, 44, 0, 353, 354, 3, 123, 61,
		0, 354, 66, 1, 0, 0, 0, 355, 356, 3, 89, 44, 0, 356, 357, 3, 95, 47, 0,
		357, 358, 3, 95, 47, 0, 358, 68, 1, 0, 0, 0, 359, 360, 3, 93, 46, 0, 360,
		361, 3, 117, 58, 0, 361, 362, 3, 111, 55, 0, 362, 363, 3, 129, 64, 0, 363,
		364, 3, 113, 56, 0, 364, 365, 3, 115, 57, 0, 365, 70, 1, 0, 0, 0, 366,
		370, 7, 0, 0, 0, 367, 369, 7, 1, 0, 0, 368, 367, 1, 0, 0, 0, 369, 372,
		1, 0, 0, 0, 370, 368, 1, 0, 0, 0, 370, 371, 1, 0, 0, 0, 371, 72, 1, 0,
		0, 0, 372, 370, 1, 0, 0, 0, 373, 374, 5, 61, 0, 0, 374, 74, 1, 0, 0, 0,
		375, 376, 5, 40, 0, 0, 376, 76, 1, 0, 0, 0, 377, 378, 5, 41, 0, 0, 378,
		78, 1, 0, 0, 0, 379, 380, 5, 44, 0, 0, 380, 80, 1, 0, 0, 0, 381, 382, 5,
		46, 0, 0, 382, 82, 1, 0, 0, 0, 383, 384, 5, 43, 0, 0, 384, 84, 1, 0, 0,
		0, 385, 387, 7, 2, 0, 0, 386, 385, 1, 0, 0, 0, 387, 388, 1, 0, 0, 0, 388,
		386, 1, 0, 0, 0, 388, 389, 1, 0, 0, 0, 389, 86, 1, 0, 0, 0, 390, 394, 5,
		39, 0, 0, 391, 393, 8, 3, 0, 0, 392, 391, 1, 0, 0, 0, 393, 396, 1, 0, 0,
		0, 394, 395, 1, 0, 0, 0, 394, 392, 1, 0, 0, 0, 395, 397, 1, 0, 0, 0, 396,
		394, 1, 0, 0, 0, 397, 398, 5, 39, 0, 0, 398, 88, 1, 0, 0, 0, 399, 400,
		7, 4, 0, 0, 400, 90, 1, 0, 0, 0, 401, 402, 7, 5, 0, 0, 402, 92, 1, 0, 0,
		0, 403, 404, 7, 6, 0, 0, 404, 94, 1, 0, 0, 0, 405, 406, 7, 7, 0, 0, 406,
		96, 1, 0, 0, 0, 407, 408, 7, 8, 0, 0, 408, 98, 1, 0, 0, 0, 409, 410, 7,
		9, 0, 0, 410, 100, 1, 0, 0, 0, 411, 412, 7, 10, 0, 0, 412, 102, 1, 0, 0,
		0, 413, 414, 7, 11, 0, 0, 414, 104, 1, 0, 0, 0, 415, 416, 7, 12, 0, 0,
		416, 106, 1, 0, 0, 0, 417, 418, 7, 13, 0, 0, 418, 108, 1, 0, 0, 0, 419,
		420, 7, 14, 0, 0, 420, 110, 1, 0, 0, 0, 421, 422, 7, 15, 0, 0, 422, 112,
		1, 0, 0, 0, 423, 424, 7, 16, 0, 0, 424, 114, 1, 0, 0, 0, 425, 426, 7, 17,
		0, 0, 426, 116, 1, 0, 0, 0, 427, 428, 7, 18, 0, 0, 428, 118, 1, 0, 0, 0,
		429, 430, 7, 19, 0, 0, 430, 120, 1, 0, 0, 0, 431, 432, 7, 20, 0, 0, 432,
		122, 1, 0, 0, 0, 433, 434, 7, 21, 0, 0, 434, 124, 1, 0, 0, 0, 435, 436,
		7, 22, 0, 0, 436, 126, 1, 0, 0, 0, 437, 438, 7, 23, 0, 0, 438, 128, 1,
		0, 0, 0, 439, 440, 7, 24, 0, 0, 440, 130, 1, 0, 0, 0, 441, 442, 7, 25,
		0, 0, 442, 132, 1, 0, 0, 0, 443, 444, 7, 26, 0, 0, 444, 134, 1, 0, 0, 0,
		445, 446, 7, 27, 0, 0, 446, 136, 1, 0, 0, 0, 447, 448, 7, 28, 0, 0, 448,
		138, 1, 0, 0, 0, 449, 450, 7, 29, 0, 0, 450, 140, 1, 0, 0, 0, 451, 452,
		7, 30, 0, 0, 452, 453, 1, 0, 0, 0, 453, 454, 6, 70, 0, 0, 454, 142, 1,
		0, 0, 0, 5, 0, 368, 370, 388, 394, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// ClickHouseParserLexerInit initializes any static state used to implement ClickHouseParserLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewClickHouseParserLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func ClickHouseParserLexerInit() {
	staticData := &ClickHouseParserLexerLexerStaticData
	staticData.once.Do(clickhouseparserlexerLexerInit)
}

// NewClickHouseParserLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewClickHouseParserLexer(input antlr.CharStream) *ClickHouseParserLexer {
	ClickHouseParserLexerInit()
	l := new(ClickHouseParserLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &ClickHouseParserLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "ClickHouseParser.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ClickHouseParserLexer tokens.
const (
	ClickHouseParserLexerCREATE      = 1
	ClickHouseParserLexerALTER       = 2
	ClickHouseParserLexerDATABASE    = 3
	ClickHouseParserLexerTABLE       = 4
	ClickHouseParserLexerIF          = 5
	ClickHouseParserLexerNOT         = 6
	ClickHouseParserLexerEXISTS      = 7
	ClickHouseParserLexerON          = 8
	ClickHouseParserLexerCLUSTER     = 9
	ClickHouseParserLexerENGINE      = 10
	ClickHouseParserLexerCOMMENT     = 11
	ClickHouseParserLexerORDER       = 12
	ClickHouseParserLexerPARTITION   = 13
	ClickHouseParserLexerPRIMARY     = 14
	ClickHouseParserLexerSAMPLE      = 15
	ClickHouseParserLexerTTL         = 16
	ClickHouseParserLexerSETTINGS    = 17
	ClickHouseParserLexerKEY         = 18
	ClickHouseParserLexerBY          = 19
	ClickHouseParserLexerDEFAULT     = 20
	ClickHouseParserLexerCODEC       = 21
	ClickHouseParserLexerINDEX       = 22
	ClickHouseParserLexerTYPE        = 23
	ClickHouseParserLexerGRANULARITY = 24
	ClickHouseParserLexerINTERVAL    = 25
	ClickHouseParserLexerSECOND      = 26
	ClickHouseParserLexerMINUTE      = 27
	ClickHouseParserLexerHOUR        = 28
	ClickHouseParserLexerDAY         = 29
	ClickHouseParserLexerWEEK        = 30
	ClickHouseParserLexerMONTH       = 31
	ClickHouseParserLexerQUARTER     = 32
	ClickHouseParserLexerYEAR        = 33
	ClickHouseParserLexerADD         = 34
	ClickHouseParserLexerCOLUMN      = 35
	ClickHouseParserLexerID          = 36
	ClickHouseParserLexerEQUAL       = 37
	ClickHouseParserLexerLEFT_P      = 38
	ClickHouseParserLexerRIGHT_P     = 39
	ClickHouseParserLexerCOMMA       = 40
	ClickHouseParserLexerDOT         = 41
	ClickHouseParserLexerPLUS        = 42
	ClickHouseParserLexerNUMBER      = 43
	ClickHouseParserLexerSTRING      = 44
	ClickHouseParserLexerB           = 45
	ClickHouseParserLexerC           = 46
	ClickHouseParserLexerD           = 47
	ClickHouseParserLexerE           = 48
	ClickHouseParserLexerF           = 49
	ClickHouseParserLexerG           = 50
	ClickHouseParserLexerH           = 51
	ClickHouseParserLexerI           = 52
	ClickHouseParserLexerJ           = 53
	ClickHouseParserLexerK           = 54
	ClickHouseParserLexerL           = 55
	ClickHouseParserLexerM           = 56
	ClickHouseParserLexerN           = 57
	ClickHouseParserLexerO           = 58
	ClickHouseParserLexerP           = 59
	ClickHouseParserLexerQ           = 60
	ClickHouseParserLexerR           = 61
	ClickHouseParserLexerS           = 62
	ClickHouseParserLexerT           = 63
	ClickHouseParserLexerU           = 64
	ClickHouseParserLexerV           = 65
	ClickHouseParserLexerW           = 66
	ClickHouseParserLexerX           = 67
	ClickHouseParserLexerY           = 68
	ClickHouseParserLexerZ           = 69
	ClickHouseParserLexerWS          = 70
)
